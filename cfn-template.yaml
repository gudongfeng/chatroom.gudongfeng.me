AWSTemplateFormatVersion: 2010-09-09
Resources:
  AppSyncServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "appsync.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
  AppSyncDDBAccessPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "AppSyncDDBAccessPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "dynamodb:BatchGetItem"
              - "dynamodb:BatchWriteItem"
              - "dynamodb:PutItem"
              - "dynamodb:DeleteItem"
              - "dynamodb:GetItem"
              - "dynamodb:Scan"
              - "dynamodb:Query"
              - "dynamodb:UpdateItem"
            Resource:
              - "arn:aws:dynamodb:*:*:table/AppSyncQuizTable"
              - "arn:aws:dynamodb:*:*:table/AppSyncQuizTable/*"
      Roles:
        - Ref: "AppSyncServiceRole"
  AppSyncGraphQLAPI:
    Type: 'AWS::AppSync::GraphQLApi'
    Properties:
      Name: 'SimpleQuizApi'
      AuthenticationType: 'API_KEY'
      LogConfig:
        CloudWatchLogsRoleArn: !GetAtt AppSyncServiceRole.Arn
        FieldLogLevel: ALL
  AppSyncGraphQLAPIKey:
    Type: 'AWS::AppSync::ApiKey'
    Properties: 
      ApiId: !GetAtt AppSyncGraphQLAPI.ApiId
      Expires: 1575938240 
  AppSyncGraphQLSchema:
    Type: 'AWS::AppSync::GraphQLSchema'
    Properties:
      ApiId: !GetAtt AppSyncGraphQLAPI.ApiId
      Definition: |
        type Question {
          id: ID!
          text: String!
          explanation: String
          answers: [AWSJSON]
        }

        type PaginatedQuestions {
          nextToken: String
          items: [Question]
        }

        type Query {
          getQuestion(id: ID!): Question
          listQuestions(limit: Int, nextToken: String): PaginatedQuestions
        }

        input CreateQuestionInput {
          text: String!
          explanation: String
          answers: [AWSJSON]
        }

        type Mutation {
          createQuestion(input: CreateQuestionInput!): Question
        }
  AppSyncGraphQLDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId: !GetAtt AppSyncGraphQLAPI.ApiId
      Name: "DDBQuizTableDataSource"
      Description: "Quiz Table DynamoDB data source"
      Type: "AMAZON_DYNAMODB"
      ServiceRoleArn: !GetAtt AppSyncServiceRole.Arn
      DynamoDBConfig:
        TableName: !Ref DDBQuizTable
        AwsRegion: !Ref 'AWS::Region'
  AppSyncDDBListQuestionsQueryResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId: !GetAtt AppSyncGraphQLAPI.ApiId
      TypeName: 'Query'
      FieldName: 'listQuestions'
      DataSourceName: !GetAtt AppSyncGraphQLDataSource.Name
      RequestMappingTemplate: |
        {
            "version" : "2017-02-28",
            "operation" : "Scan",
            "limit": $util.defaultIfNull(${ctx.args.limit}, 20),
            "nextToken": $util.toJson($util.defaultIfNullOrBlank($ctx.args.nextToken, null))
        }
      ResponseMappingTemplate: |
        $utils.toJson($context.result)
  AppSyncDDBGetQuestionQueryResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId: !GetAtt AppSyncGraphQLAPI.ApiId
      TypeName: 'Query'
      FieldName: 'getQuestion'
      DataSourceName: !GetAtt AppSyncGraphQLDataSource.Name
      RequestMappingTemplate: |
        {
            "version": "2017-02-28",
            "operation": "GetItem",
            "key": {
                "id": $util.dynamodb.toDynamoDBJson($ctx.args.id),
            }
        }
      ResponseMappingTemplate: |
        $utils.toJson($context.result)
  AppSyncDDBCreateQuestionMutationResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId: !GetAtt AppSyncGraphQLAPI.ApiId
      TypeName: 'Mutation'
      FieldName: 'createQuestion'
      DataSourceName: !GetAtt AppSyncGraphQLDataSource.Name
      RequestMappingTemplate: |
        {
          "version" : "2017-02-28",
          "operation" : "PutItem",
          "key": {
              "id": $util.dynamodb.toDynamoDBJson($util.autoId()),
          },
          "attributeValues" : $util.dynamodb.toMapValuesJson($ctx.args.input)
        }
      ResponseMappingTemplate: |
        $utils.toJson($context.result)
  DDBQuizTable: 
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: 'AppSyncQuizTable'
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
      BillingMode: "PAY_PER_REQUEST"